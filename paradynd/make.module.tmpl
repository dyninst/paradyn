# 
# Common makefile template for paradynd.  This file is not intended to
# be a useful Makefile in isolation; instead, it should be included
# from within an architecture-specific Makefile.
#
# $Id: make.module.tmpl,v 1.94 2007/01/17 22:47:43 giri Exp $
#

CFLAGS		     += $(TCLFRIENDLYWARNINGS) -DNEW_TIME_TYPES
CXXFLAGS	     += $(TCLFRIENDLYWARNINGS) -DNEW_TIME_TYPES
TFLAGS		     += $(TCLFRIENDLYWARNINGS) -DNEW_TIME_TYPES

#TEMPORARY, FOR DEBUGGING....
#CXXFLAGS	+= -DDEBUG_CALL_POINTS

TARGET	      = paradynd


IFILE	+=-I../mrnet/mrnet/h/mrnet -I../mrnet/mrnet
IFILE	+=-I../../mrnet/mrnet/h/mrnet -I../../mrnet/mrnet

VPATH	     += ../../paradynd/src:../../paradyn/h

SRCS	+=	../src/comm.C \
		../src/context.C \
		../src/dynrpc.C \
		../src/init.C \
		../src/main.C \
		../src/debug.C \
		../src/costmetrics.C \
		../src/resource.C \
 		../src/mdl.C \
 		../src/mdld_data.C \
 		../src/focus.C \
		../src/showerror.C \
		../src/processMgr.C \
		../src/threadMgr.C \
		../src/pd_image.C \
		../src/pd_module.C \
		../src/pd_thread.C \
		../src/pd_process.C \
		../src/internalMetrics.C \
		../src/metricFocusNode.C \
		../src/machineMetFocusNode.C \
		../src/processMetFocusNode.C \
		../src/threadMetFocusNode.C \
		../src/instrCodeNode.C \
		../src/instrDataNode.C \
		../src/perfStream-def.C \
		../src/perfStream.C \
		../src/templatesPD.C \
		../src/instReqNode.C \
		../src/papiMgr.C


ifdef USES_SHM_SAMPLING
SRCS 		+= ../src/varInstance.C \
		   ../src/shmMgr.C  \
		   ../src/variableMgr.C \
		   ../src/shmSegment-unix.C \
		   ../src/shmSegment.C \
		   ../src/sharedMetaData.C \
		   ../src/varInstanceHKs.C

CXXFLAGS	+= -DSHM_SAMPLING
TFLAGS		+= -DSHM_SAMPLING
CFLAGS		+= -DSHM_SAMPLING
endif

IGEN_GEN_SRCS = dyninstRPC.mrnet.SRVR.C \
		dyninstRPC.mrnet.temp.C



#		dyninstRPC.xdr.SRVR.C \
#		dyninstRPC.xdr.CLNT.C \
#		dyninstRPC.xdr.C \


IGEN_ISRCS    = dyninstRPC.I
PREREQUISITES = $(IGEN_GEN_SRCS)


LIBS		+= -lpdutil
LIBS 		+= -lmrnet -lxplat -lpthread -lcommon -lsymtabAPI -ldyninstAPI 

ifdef CROSSCOMPILER
SYSLIBS		+= -liberty -lg++ -lstdc++ -lm
else
SYSLIBS         += -liberty
endif

#IFLAGS       += -I../$(PLATFORM) -I../src -I../../dyninstAPI/h -I../../mrnet/mrnet/h
IFLAGS       += -I../$(PLATFORM) -I../src -I../../mrnet/mrnet/h

all:    $(TARGET)

# I couldn't figure out how to explicitly instantiate a templated
# function whose template arguments are protected members of
# LineInformation, but apparently the compiler can.  Since the
# function is only used internally by LineInformation, the
# templates won't be duplicated.

#LineInformation.o : ../../dyninstAPI/src/LineInformation.C
#	$(CXX) $(TFLAGS) -c $<

#templates0.o: ../../dyninstAPI/src/templates0.C
#	$(CXX) $(TFLAGS) -c ../../dyninstAPI/src/templates0.C

#templates1.o: ../../dyninstAPI/src/templates1.C
#	$(CXX) $(TFLAGS) -c ../../dyninstAPI/src/templates1.C

#templates2.o: ../../dyninstAPI/src/templates2.C
#	$(CXX) $(TFLAGS) -c ../../dyninstAPI/src/templates2.C

templatesPD.o: ../src/templatesPD.C
	$(CXX) $(TFLAGS) -c ../src/templatesPD.C

templatesIGEN.o: ../src/templatesIGEN.C
	$(CXX) $(TFLAGS) -c ../src/templatesIGEN.C
