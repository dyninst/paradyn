# Paradyn overall build configuration (Windows/NT)
#
# $Id: nmake.config,v 1.6 1998/03/02 00:42:11 wylie Exp $
#

AR		= ar
AS              =
CC              = cl -nologo
CXX             = cl -nologo
LEX             = p:\paradyn\packages\winnt\bin\flex
RANLIB          =
YFLAGS          = -d -y
YACC            = p:\paradyn\packages\winnt\bin\bison
CP		= copy
MV		= move
RM		= rm -f
MKDIR		= mkdir
# COLLECTOR is only used by purify & quantify
#COLLECTOR       = /s/gcc-2.7.1/bin/../lib/gcc-lib/$(PLATFORM)/2.7.1/ld
COLLECTOR       =

ARCH_DEF	= -Di386_unknown_nt4_0

#LDFLAGS		= -link

# most "main" modules are only two levels deep, but we need to be able to
# change this for those that are deeper in the tree
!ifndef TO_CORE
TO_CORE         = ..\..
!endif

# Default destinations for library and executable installation
LIBRARY_DEST  = $(TO_CORE)\..\lib\$(PLATFORM)
PROGRAM_DEST  = $(TO_CORE)\..\bin\$(PLATFORM)

# Usually, we look for files, binaries, libs in $(TO_CORE)/....<something>.
# But if the file doesn't exist there (i.e. if the user hasn't checked them out
# with cvs), then we should look in a backup location.  That's what this vrble
# is about.  It's used several times below in this file.
#BACKUP_CORE = p:\paradyn\core

# Default module compiler; modules which want $(CC) should redefine
# this, **NOT** CC

MODCC           = $(CXX)
MODCFLAGS       = $(CXXFLAGS)

#.SUFFIXES:      .I

#VPATH         = ../src:$(TO_CORE)/../lib/$(PLATFORM):/p/paradyn/lib/$(PLATFORM)
VPATH         = ..\src:$(TO_CORE)\..\lib\$(PLATFORM)

IFLAGS          = -I. -I$(TO_CORE) -Ip:/paradyn/packages/winnt/oncrpc/

#ASFLAGS         = -P $(ARCH_DEF)

#don't inline -- for the files that won't emit template code
INLINE_DEFINES = 

#inline the private members of the class -- templates.o can use this
TEMP_INLINE_DEFINES = -DDO_INLINE_P="inline"

# inline everything -- the way things should be
ALL_INLINE_DEFINES = -DDO_INLINE_F="inline" -DDO_INLINE_P="inline"


DEFCFLAGS	= -Z7 -W3

CFLAGS          = $(DEFCFLAGS) $(IFLAGS) $(ARCH_DEF)

CXXFLAGS	= $(DEFCFLAGS) -DCRTAPI1=_cdecl -DCRTAPI2=_cdecl -TP -DWIN32 $(IFLAGS) $(ARCH_DEF)
 
# flags for kludge files, won't have warnings generated
KFLAGS          = $(IFLAGS) $(ARCH_DEF)

# flags for template files, don't define external template flags
# -g is optional in this case -- should be defined at module level
TFLAGS          = $(IFLAGS) $(TEMP_INLINE_DEFINES) $(ARCH_DEF)

!ifdef DO_INLINE_ALL
CXXFLAGS        = $(CXXFLAGS) -DDO_INLINE_F="inline" -DDO_INLINE_P="inline"
!endif

# Start off LIBDIR to point to the user's devel area's paradyn lib directory.
# As a backup, in case the user hasn't checked out & compiled some paradyn lib,
# we stick in /p/paradyn/lib _second_.
LIBDIR          = -LIBPATH:$(LIBRARY_DEST) \
			-LIBPATH:$(BACKUP_CORE)\..\lib\$(PLATFORM) \
			-LIBPATH:p:\paradyn\packages\winnt\oncrpc\lib\

# Set IGEN to point to $(TO_CORE)/../bin/$(PLATFORM)/igen, if it exists,
# else set it to $(BACKUP_CORE)/../bin/$(PLATFORM)/igen, if it exists,
# else set it to just "igen" (i.e. assume it's in the user's path)
IGEN = $(TO_CORE)\igen\$(PLATFORM) 

!ifdef NO_IMPLICIT_TEMPLATES
#CFLAGS          += -fno-implicit-templates
#CXXFLAGS        += -fno-implicit-templates
#KFLAGS          += -fno-implicit-templates
#TFLAGS          += -fno-implicit-templates
!endif

!ifndef INSTANTIATE_TEMPLATES
!ifndef NO_IMPLICIT_TEMPLATES
# -fexternal-templates and -Dexternal_templates should both be used or
# neither should be used; add them to CFLAGS, CXXFLAGS, and KFLAGS
# (but not to TFLAGS).
#
#CFLAGS          = $(CFLAGS) -fexternal-templates -Dexternal_templates
#CXXFLAGS        = $(CXXFLAGS) -fexternal-templates -Dexternal_templates
#KFLAGS          = $(KFLAGS) -fexternal-templates -Dexternal_templates
!endif
!endif

!ifdef USES_PVM
PVM_DIR         = $(PVM_ROOT)/lib/$(PVM_ARCH)
IFLAGS          = $(IFLAGS) -I$(PVM_ROOT)/include
#LIBDIR          += $(patsubst %,-L%,$(PVM_DIR))
#VPATH           += $(PVM_DIR)
!endif

!ifdef USES_TCLTK
# Set TCL2C to $(TO_CORE)/tclStuff/tcl2c, if it exists, else
# set it to $(BACKUP_CORE)/tclStuff/tcl2c, if it exists, else
# set it to just tcl2c (i.e. assume it's in the user's shell path)
TCL2C           = $(shell if [ -f $(TO_CORE)/tclStuff/tcl2c ]; then echo $(TO_CORE)/tclStuff/tcl2c; else if [ -f $(BACKUP_CORE)/tclStuff/tcl2c ]; then echo $(BACKUP_CORE)/tclStuff/tcl2c; else echo tcl2c; fi; fi )
TCL2C_GEN_SRCS  = tcl2c.C

# Set TCLTK_INCLUDES to $(TO_CORE)/tclStuff/include, if it exists,
# else set it to $(BACKUP_CORE)/tclStuff/include.
TCLTK_INCLUDES  = $(shell if [ -d $(TO_CORE)/tclStuff/include ]; then echo $(TO_CORE)/tclStuff/include; else echo $(BACKUP_CORE)/tclStuff/include; fi )

TCLTK_LIBS      = /p/paradyn/packages/tcl7.5

IFLAGS          += $(patsubst %,-I%,$(TCLTK_INCLUDES))
LIBDIR          += $(patsubst %,-L%/lib,$(TCLTK_LIBS))
!endif

#ifdef USES_FLEX
#FLEX_DIR        = p:\paradyn\packages\winnt\bin\flex
#LIBDIR          += $(patsubst %,-L%,$(FLEX_DIR))
#VPATH           = $(VPATH) $(FLEX_DIR)
#endif

#ifdef USES_LIBERTY
# Since libiberty.a is in the same g++ directory as libstdc++.a and
# libg++.a, no need for a "-L$(LIBERTY_DIR)" entry -at
#endif

#ifdef USES_X11
#ifeq ($(PLATFORM),sparc-sun-solaris2.4)
#CFLAGS          += -I/usr/openwin/include
#CXXFLAGS        += -I/usr/openwin/include
#TFLAGS          += -I/usr/openwin/include
#LIBDIR          += -R/usr/openwin/lib -L/usr/openwin/lib
#VPATH           += /usr/openwin/lib
#endif

#ifeq ($(PLATFORM),i386-unknown-solaris2.5)
#CFLAGS          += -I/usr/openwin/include
#CXXFLAGS        += -I/usr/openwin/include
#TFLAGS          += -I/usr/openwin/include
#LIBDIR          += -R/usr/openwin/lib -L/usr/openwin/lib
#VPATH           += /usr/openwin/lib
#endif

#endif


# Include any per-user configuration changes; this "local" config file
# should *not* be under CVS control, so that it never gets committed.

#!include $(TO_CORE)/make.config.local


