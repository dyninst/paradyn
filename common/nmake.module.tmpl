#
# Common makefile template for dyninstAPI library.  This file is not
# intended to be a useful Makefile in isolation; instead, it should be
# included from within an architecture-specific Makefile.
#
# $Id: nmake.module.tmpl,v 1.14 2007/01/09 02:00:35 giri Exp $
#

SUITE_NAME	= Dyninst
RELEASE_NUM	= 4.2
#BUILD_MARK should be (re-)defined in core/make.config.local rather than here!

TARGET = libdyninstAPI.dll

# building as a DLL is not the common case
UNCOMMON_LINK		= true
UNCOMMON_INSTALL	= true



DEFINES      = -DBPATCH_LIBRARY -DBPATCH_SET_MUTATIONS_ACTIVE -DBPATCH_LIBRARY_F -DNEW_TIME_TYPES
CFLAGS       = $(CFLAGS) $(DEFINES)
CXXFLAGS     = $(CXXFLAGS) $(DEFINES)

IFLAGS       = $(IFLAGS) -I../h

SRCS         = $(SRCS)Ident.C\
                String.C \
                Timer.C \
                Types.C \
                debugOstream.C \
                lprintf.C \
                pathName.C \
                int64iostream.C \
                timing.C \
                Time.C \
                fraction.C \
                timing-nt.C \
		    common-templates.C

OBJS         = $(OBJS)Ident.obj \
                String.obj \
                Timer.obj \
                Types.obj \
				bitArray.obj \
                debugOstream.obj \
                lprintf.obj \
                pathName.obj \
                int64iostream.obj \
                timing.obj \
                Time.obj \
                fraction.obj \
                timing-nt.obj \
		    common-templates.obj

all: $(TARGET)

{..\..\common\src\}.C.obj:
	$(CXX) $(CXXFLAGS) -c $<

{..\src\}.C.obj:
	$(CXX) $(CXXFLAGS) -c $<

$(DEST)\libdyninstAPI.dll:	libdyninstAPI.dll
	$(CP) libdyninstAPI.dll $(DEST)

