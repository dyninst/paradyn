#
# Common makefile template for paradyn.  This file is not intended to
# be a useful Makefile in isolation; instead, it should be included
# from within an architecture-specific Makefile.
#
# $Id: nmake.module.tmpl,v 1.14 2004/07/28 07:24:47 jaw Exp $
#

CFLAGS		= $(CFLAGS) $(TCLFRIENDLYWARNINGS)
#CXXFLAGS	= $(CXXFLAGS) $(TCLFRIENDLYWARNINGS) -DPCDEBUG
CXXFLAGS	= $(CXXFLAGS) $(TCLFRIENDLYWARNINGS) 
TFLAGS		= $(TFLAGS) $(TCLFRIENDLYWARNINGS)

CFLAGS		= $(CFLAGS) -I../../dyninstAPI/h
CXXFLAGS	= $(CXXFLAGS) -I../../dyninstAPI/h
TFLAGS		= $(TFLAGS) -I../../dyninstAPI/h
TARGET	      = paradyn.exe

DMSRCS	= ../src/DMthread/DMpublic.C \
		../src/DMthread/DMdaemon.C \
		../src/DMthread/DMmetric.C \
		../src/DMthread/DMmain.C \
		../src/DMthread/DMperfstream.C \
		../src/DMthread/DMresource.C \
		../src/DMthread/DMcritPath.C \
		../src/DMthread/DMphase.C \
      ../src/DMthread/DMmetricFocusReqBundle.C \
      ../src/DMthread/DMmetricFocusReq.C \
		../src/DMthread/CallGraph.C \
		../src/DMthread/MagnifyManager.C

MAINSRCS = ../src/pdMain/main.C  \
		../src/pdMain/main-nt.C

VMSRCS	= ../src/VMthread/VMmain.C

VISISRCS	= ../src/VISIthread/VISIthreadmain.C \
		../src/VISIthread/VISIthreadpublic.C

PCSRCS = ../src/PCthread/PCdata.C \
		../src/PCthread/PCfocus.C \
		../src/PCthread/PCsearch.C \
		../src/PCthread/PCpublic.C \
		../src/PCthread/PCmain.C \
		../src/PCthread/PCconstants.C \
		../src/PCthread/PCfilter.C \
		../src/PCthread/PCmetric.C \
		../src/PCthread/PCwhy.C \
		../src/PCthread/PCexperiment.C \
		../src/PCthread/PCrules.C \
		../src/PCthread/PCshg.C \
		../src/PCthread/PCmetricInst.C \
		../src/PCthread/PCcostServer.C

UISRCS = ../src/UIthread/tclTunable.C \
		../src/UIthread/Status.C \
		../src/UIthread/uimpd.tcl.C \
		../src/UIthread/UImain.C \
		../src/UIthread/UIpublic.C \
		../src/UIthread/paradyn.tcl.C \
		../src/UIthread/whereAxis.C \
		../src/UIthread/abstractions.C \
		../src/UIthread/where4treeConstants.C \
		../src/UIthread/rootNode.C \
		../src/UIthread/scrollbar.C \
		../src/UIthread/whereAxisTcl.C \
		../src/UIthread/shg.C \
		../src/UIthread/shgRootNode.C \
		../src/UIthread/shgPhases.C \
		../src/UIthread/shgConsts.C \
		../src/UIthread/shgTcl.C \
		../src/UIthread/tkTools.C \
		../src/UIthread/pdLogo.C \
		../src/UIthread/callGraphConsts.C \
		../src/UIthread/callGraphTcl.C \
		../src/UIthread/callGraphDisplay.C \
		../src/UIthread/callGraphRootNode.C \
		../src/UIthread/callGraphs.C \
        ../src/UIthread/ParadynUI.C \
        ../src/UIthread/ParadynTclUI.C \
        ../src/UIthread/ParadynTkGUI.C

TCSRCS	= ../src/TCthread/TCmain.C \
		../src/TCthread/tunableConst.C

METSRCS	= ../src/met/metMain.C \
		../src/met/mdl.C

TEMPLSRCS	= ../src/templatesIGENMDL.C  \
				../src/templatesDM.C  \
				../src/templatesPCV.C  \
				../src/templatesUI.C  \
				../src/templatesUIWASHG.C

SRCS	     = $(SRCS) \
				$(DMSRCS) \
				$(MAINSRCS) \
				$(VMSRCS) \
				$(VISISRCS) \
				$(PCSRCS) \
				$(UISRCS) \
				$(TCSRCS) \
				$(METSRCS) \
				$(TEMPLSRCS) \
				$(TCL2C_GEN_SRCS)

# note that due to our use of the nmake macro substitution capability
# to define the IGEN_GEN_OBJS macro, we must capitalize the files
# in IGEN_GEN_SRCS carefully - make sure that the only .C (capital) is
# the one we want to replace.  This takes advantage of Windows using a
# case preserving but case insensitive filesystem.
#
IGEN_GEN_SRCS =	dataManager.thread.C \
		dataManager.thread.clnt.C \
		dataManager.thread.srvr.C \
		performanceConsultant.thread.C \
		performanceConsultant.thread.clnt.C \
		performanceConsultant.thread.srvr.C \
		dyninstRPC.xdr.C \
		dyninstRPC.xdr.clnt.C \
		visi.xdr.clnt.C \
		visi.xdr.C \
		VISIthread.thread.C \
		VISIthread.thread.srvr.C \
		VISIthread.thread.clnt.C \
		UI.thread.C \
		UI.thread.clnt.C \
		UI.thread.srvr.C \
		VM.thread.C \
		VM.thread.srvr.C \
		VM.thread.clnt.C 

	

IGEN_ISRCS    = dataManager.I \
		performanceConsultant.I \
		dyninstRPC.I \
		visi.I \
		VISIthread.I \
		UI.I \
		VM.I


# these pathnames can remain forward slashes - perl seems
# to know what to do with them as forward slashes
TCL_SRCS	= ../tcl/applic.tcl \
	../tcl/errorList.tcl \
	../tcl/focusUtils.tcl \
	../tcl/generic.tcl \
	../tcl/mainMenu.tcl \
	../tcl/mets.tcl \
	../tcl/save.tcl \
	../tcl/shg.tcl \
	../tcl/startVisi.tcl \
	../tcl/status.tcl \
	../tcl/tclTunable.tcl \
	../tcl/uimProcs.tcl \
	../tcl/whereAxis.tcl \
	../tcl/callGraph.tcl

		
SRCS		= $(SRCS) $(TCL2C_GEN_SRCS)


IGEN_GEN_OBJS	= $(IGEN_GEN_SRCS:.C=.obj)
TCL2C_GEN_OBJS	= $(TCL2C_GEN_SRCS:.C=.obj)

# we use a two-step method to convert the Paradyn source specification
# to its object specification, because we can only substitute one
# section of the pathname at a time.  We remove the "../src/<dir>" prefix
# in the TMP_PD_OBJS macro, then conver the .C to a .obj in the PD_OBJS macro.
#
TMP_PD_OBJS	= $(MAINSRCS:../src/pdMain/=) \
			$(DMSRCS:../src/DMthread/=) \
			$(VMSRCS:../src/VMthread/=) \
			$(VISISRCS:../src/VISIthread/=) \
			$(PCSRCS:../src/PCthread/=) \
			$(UISRCS:../src/UIthread/=) \
			$(TCSRCS:../src/TCthread/=) \
			$(METSRCS:../src/met/=) \
			$(TEMPLSRCS:../src/=)
PD_OBJS		= $(TMP_PD_OBJS:.C=.obj)

OBJS		= $(OBJS) $(PD_OBJS) $(IGEN_GEN_OBJS) $(TCL2C_GEN_OBJS)

IFLAGS       = $(IFLAGS) -DPARADYN

LIBS 	     = $(LIBS) libpdthread.lib libxplat.lib libpdutil.lib
SYSLIBS	     = $(SYSLIBS) $(TCLTK_LIBS) $(X11_LIB) $(FLEX_LIB) $(RPC_LIB)

CFLAGS       = $(CFLAGS) -DNO_MDL_PRINT
CXXFLAGS     = $(CXXFLAGS) -DNO_MDL_PRINT
TFLAGS       = $(TFLAGS) -DNO_MDL_PRINT

all:	$(TARGET) 

$(TCL2C_GEN_SRCS):	$(TCL_SRCS)
	$(PERL) $(TCL2C) $(TCL_SRCS) > $@

{..\src\pdMain\}.C{}.obj:
	$(CXX) $(CXXFLAGS) -c $<

{..\src\DMthread\}.C{}.obj:
	$(CXX) $(CXXFLAGS) -c $<

{..\src\VMthread\}.C{}.obj:
	$(CXX) $(CXXFLAGS) -c $<

{..\src\VISIthread\}.C{}.obj:
	$(CXX) $(CXXFLAGS) -c $<

{..\src\PCthread\}.C{}.obj:
	$(CXX) $(CXXFLAGS) -c $<

{..\src\UIthread\}.C{}.obj:
	$(CXX) $(CXXFLAGS) -c $<

{..\src\TCthread\}.C{}.obj:
	$(CXX) $(CXXFLAGS) -c $<

{..\src\met\}.C{}.obj:
	$(CXX) $(CXXFLAGS) -c $<

{..\src\}.C{}.obj:
	$(CXX) $(CXXFLAGS) -c $<

dataManager.thread.C \
	dataManager.thread.h \
	dataManager.thread.CLNT.C \
	dataManager.thread.CLNT.h \
	dataManager.thread.SRVR.C \
	dataManager.thread.SRVR.h:	..\h\dataManager.I
	igen -thread ..\h\dataManager.I

performanceConsultant.thread.C \
	performanceConsultant.thread.h \
	performanceConsultant.thread.CLNT.C \
	performanceConsultant.thread.CLNT.h \
	performanceConsultant.thread.SRVR.C \
	performanceConsultant.thread.SRVR.h:	..\h\performanceConsultant.I
	igen -thread ..\h\performanceConsultant.I

dyninstRPC.xdr.C \
	dyninstRPC.xdr.h \
	dyninstRPC.xdr.CLNT.C \
	dyninstRPC.xdr.CLNT.h \
	dyninstRPC.xdr.SRVR.C \
	dyninstRPC.xdr.SRVR.h:	..\h\dyninstRPC.I
	igen -xdr ..\h\dyninstRPC.I

visi.xdr.C \
	visi.xdr.h \
	visi.xdr.CLNT.C \
	visi.xdr.CLNT.h \
	visi.xdr.SRVR.C \
	visi.xdr.SRVR.h:	..\..\visi\h\visi.I
	igen -xdr ..\..\visi\h\visi.I

VISIthread.thread.C \
	VISIthread.thread.h \
	VISIthread.thread.CLNT.C \
	VISIthread.thread.CLNT.h \
	VISIthread.thread.SRVR.C \
	VISIthread.thread.SRVR.h:	..\h\VISIthread.I
	igen -thread ..\h\VISIthread.I

UI.thread.C \
	UI.thread.h \
	UI.thread.CLNT.C \
	UI.thread.CLNT.h \
	UI.thread.SRVR.C \
	UI.thread.SRVR.h:	..\h\UI.I
	igen -thread ..\h\UI.I

VM.thread.C \
	VM.thread.h \
	VM.thread.CLNT.C \
	VM.thread.CLNT.h \
	VM.thread.SRVR.C \
	VM.thread.SRVR.h:	..\h\VM.I
	igen -thread ..\h\VM.I

