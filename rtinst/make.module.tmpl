
#
# Common makefile template for rtinst library.  This file is not
# intended to be a useful Makefile in isolation; instead, it should be
# included from within an architecture-specific Makefile.
#
# $Log: make.module.tmpl,v $
# Revision 1.6  1995/08/29 23:21:44  hollings
# Fixed missing UNCOMMON_LINK flag.
#
# Revision 1.5  1995/08/24  15:12:04  hollings
# AIX/SP-2 port (including option for split instruction/data heaps)
# Tracing of rexec (correctly spawns a paradynd if needed)
# Added rtinst function to read getrusage stats (can now be used in metrics)
# Critical Path
# Improved Error reporting in MDL sematic checks
# Fixed MDL Function call statement
# Fixed bugs in TK usage (strings passed where UID expected)
#
# Revision 1.4  1995/05/30  05:16:03  krisna
# moved declaration of LIBS to SunOs Makefile.  we do not use libkvm.a
# on Solaris, and it is non-existent on HPUX.
#
# Revision 1.3  1995/02/21  16:27:55  jcargill
# Changes to new build system so rtinst builds for all archs
#
# Revision 1.2  1995/02/16  09:11:29  markc
# Added support for RTfirst.o and RTend.o which mark the beginning and end
# of DYNINST code.
#
# Revision 1.1  1995/01/30  18:30:31  jcargill
# Major build system reorganization
#
#

ifndef TARGET
TARGET	      = libdyninstRT.a
ALT_TARGET    = DYNINSTstartCode.o DYNINSTendCode.o RTpvmPiggy.o RTcriticalPath.o
endif

MODCC         = $(CC)
MODCFLAGS     = $(CFLAGS)

SRCS	     += ../src/RTend.c
SRCS2	     += ../src/RTend.c

DYNSRCS	      = ../src/DYNINSTstartCode.c \
		../src/DYNINSTendCode.c

all: $(TARGET) $(TARGET2) $(ALT_TARGET)

#
# override standard link rule; libdyninst is not really a library or a program.
#
UNCOMMON_LINK= true

OBJS =		$(patsubst %.C, %.o, $(filter %.C,$(notdir $(SRCS)))) \
		$(patsubst %.c, %.o, $(filter %.c,$(notdir $(SRCS)))) \
		$(patsubst %.s, %.o, $(filter %.s,$(notdir $(SRCS)))) \
		$(patsubst %.S, %.o, $(filter %.S,$(notdir $(SRCS)))) \
		$(IGEN_GEN_SRCS:%.C=%.o)

$(TARGET): $(OBJS) $(LIBS)
	$(LD) $(LDFLAGS) -o $(TARGET) $(OBJS) $(LIBS)

#
# override standard install rule; provide a default DEST if not already set
#
ifndef DEST
DEST		= $(TO_CORE)/../lib/$(PLATFORM)
endif

UNCOMMON_INSTALL= true
install: $(DEST)/$(TARGET) \
	 $(DEST)/DYNINSTstartCode.o \
	 $(DEST)/DYNINSTendCode.o \
	 $(DEST)/RTpvmPiggy.o

$(DEST)/libdyninstRT.a:       libdyninstRT.a
	cp libdyninstRT.a ../../../lib/$(PLATFORM)

$(DEST)/RTpvmPiggy.o: RTpvmPiggy.o
	cp RTpvmPiggy.o ../../../lib/$(PLATFORM)

$(DEST)/DYNINSTstartCode.o: DYNINSTstartCode.o
	cp DYNINSTstartCode.o ../../../lib/$(PLATFORM)

$(DEST)/DYNINSTendCode.o: DYNINSTendCode.o
	cp DYNINSTendCode.o ../../../lib/$(PLATFORM)
