#/****************************************************************************
# * Copyright © 2003-2005 Dorian C. Arnold, Philip C. Roth, Barton P. Miller *
# *                  Detailed MRNet usage rights in "LICENSE" file.          *
# ****************************************************************************/
# $Id: configure.in,v 1.10 2008/10/09 19:50:15 mjbrim Exp $
#
#                                               -*- Autoconf -*-
# Process this file with autoconf to produce a configure script.

AC_PREREQ(2.57)
AC_INIT([xplat], [0.1], [paradyn@cs.wisc.edu])
AC_CONFIG_SRCDIR([src/Process.C])
AC_CONFIG_HEADER([config.h])

AC_CANONICAL_HOST

abs_srcdir=`cd $srcdir && pwd`

dnl === C++ COMPILERS ===
AC_PROG_CXX(xlC_r CC g++)
AC_LANG(C++)

dnl === CONFIGURE OPTIONS
AC_ARG_ENABLE(shared,
    [AS_HELP_STRING([--enable-shared],[Build shared object version of xplat library (default off)])],
    [ BUILDSHARED="yes" ],
    [ BUILDSHARED="no"] )
AC_SUBST(BUILDSHARED)

AC_ARG_ENABLE(verbosebuild,
    [  --enable-verbosebuild                Display commands during build],
    [if test x"$enableval" = x"no"
     then VERBOSEMAKE=".SILENT:"
     else VERBOSEMAKE=""
     fi],
    [VERBOSEMAKE=".SILENT:"])
AC_SUBST(VERBOSEMAKE)

AC_ARG_ENABLE(debug,
    [AS_HELP_STRING([--enable-debug],[Enable debug mode options (default off)])],
    [ debug_mode="yes" ],
    [ debug_mode="no" ])


PD_COMPILER_TYPE

if test $COMPILER_TYPE = "gnu" ; then

    CXXFLAGS="$CXXFLAGS -Dcompiler_gnu"
    if test $BUILDSHARED = "yes" ; then
        CXXFLAGS="$CXXFLAGS -fPIC"
    fi
    SOFLAGS=" -fPIC -shared -rdynamic"
    C_AS_CPLUSPLUS="-x c++"

    AC_PATH_PROG(AR, ar)
    AC_SUBST(AR)
    ARFLAGS="crv"
    AC_SUBST(ARFLAGS)

elif test $COMPILER_TYPE = "aix-native" ; then

    CXXFLAGS="$CXXFLAGS -Dcompiler_ibm"
    SOFLAGS=" -G"
    C_AS_CPLUSPLUS="-+"

    AC_PATH_PROG(AR, ar)
    AC_SUBST(AR)
    ARFLAGS="crv"
    AC_SUBST(ARFLAGS)

elif test $COMPILER_TYPE = "forte" ; then

    CXXFLAGS="$CXXFLAGS -Dcompiler_sun"
    if test $BUILDSHARED = "yes" ; then
        CXXFLAGS="$CXXFLAGS -KPIC"
    fi
    SOFLAGS=" -G"

    AC_PATH_PROG(AR, CC)
    AC_SUBST(AR)
    ARFLAGS="-xar -o"
    AC_SUBST(ARFLAGS)
fi

CXXFLAGS=`echo $CXXFLAGS | sed 's/-g //; s/-O //; s/-O1 //; s/-O2 //; s/-O3 //'`
if test $debug_mode = "yes" ; then
    CXXFLAGS="-g $CXXFLAGS -DDEBUG"
else
    CXXFLAGS="-O2 $CXXFLAGS"
fi

CXXFLAGS="$CXXFLAGS -D__STDC_LIMIT_MACROS -D__STDC_CONSTANT_MACROS"

AC_MSG_CHECKING(whether we can compile/link with \"$CXX $CXXFLAGS $LIBS\".)
AC_LINK_IFELSE( [AC_LANG_PROGRAM([],[])],
                [AC_MSG_RESULT(yes)],
                [AC_MSG_ERROR(no)])
AC_SUBST(CXXFLAGS)
AC_SUBST(SOFLAGS)

AC_PROG_MAKE_SET
AC_PROG_RANLIB
AC_PROG_INSTALL

# Checks for header files.
AC_HEADER_STDC
AC_CHECK_HEADERS([arpa/inet.h fcntl.h limits.h netdb.h netinet/in.h stdlib.h string.h sys/ioctl.h sys/socket.h unistd.h sys/sockio.h])

# Checks for typedefs, structures, and compiler characteristics.
AC_HEADER_STDBOOL
AC_C_CONST
AC_TYPE_PID_T

# Checks for library functions.
AC_FUNC_FORK
AC_CHECK_FUNCS([gethostbyname socket strchr strerror])

AC_OUTPUT( Makefile:Makefile.in )
