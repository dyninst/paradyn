dnl Process this file with autoconf to produce a configure script.

AC_INIT(src/Network.C)
AC_CONFIG_SRCDIR(src/Network.C)
AC_CONFIG_HEADER([src/config.h])

AC_CONFIG_AUX_DIR(conf)

dnl === COMPILERS AND FLAGS ===
dnl hacks to allow user to define CC, CFLAGS, etc without using env vars
dnl I don't like it -- suggestions?

dnl *** C Compiler and Options ***
AC_ARG_WITH(cc,
            [
===Begin MRNET Compile Options:
  --with-cc                   Specify C compiler],
            [CC="${withval}";], CC="gcc")

AC_ARG_WITH(cflags,
            [  --with-cflags               Set C compiler flags],
            [CFLAGS="${withval}";], CFLAGS="-O2";)

AC_ARG_WITH(cxx,
            [  --with-cxx                  Specify C++ compiler],
            [CXX="${withval}";],CXX="g++";)

AC_ARG_WITH(cxxflags,
            [  --with-cxxflags             Set C++ compiler flags],
            [CXXFLAGS="${withval}";], CXXFLAGS="-O2")

AC_ARG_WITH(ldflags,
            [  --with-ldflags              Set loader flags],
            [LDFLAGS="${withval}";])

AC_ARG_WITH(libfl,
            [  --with-libfl                Link line for flex library],
            [FLEX_LIB="${withval}";], 
            [AC_CHECK_LIB(fl, [printf], FLEX_LIB="-lfl", [AC_MSG_ERROR(Can't find flex library libfl. Must specify with --with-libfl)])] )

AC_ARG_WITH(outputlevel,
            [  --with-outputlevel          output level (off, *error*, info, lo-debug, mid-debug, hi-debug)],
            [if test "${withval}" = "off" ; then
               OUTPUT_LEVEL=0;
             elif test "${withval}" = "info" ; then
               OUTPUT_LEVEL=2;
             elif test "${withval}" = "lo-debug" ; then
               OUTPUT_LEVEL=3;
             elif test "${withval}" = "mid-debug" ; then
               OUTPUT_LEVEL=4;
             elif test "${withval}" = "hi-debug" ; then
               OUTPUT_LEVEL=5;
             else
               OUTPUT_LEVEL=1;
             fi],
            [OUTPUT_LEVEL=1])

AC_C_BIGENDIAN
dnl === SETTING MRNET CONFIGURATION DEFAULTS ===

dnl MRNET_ARCH is host returned by config.guess with
dnl all `-` and `.` characters replaced by `_` so that a
dnl -D MRNET_ARCH can be passed to the compiler
dnl without it complaining

AC_CANONICAL_HOST
changequote(<<, >>)dnl
MRNET_ARCH=`echo $host | sed 's/[-|.]/_/g'`
MRNET_OS=`echo $host_os | sed 's/[-0-9].*//'`
MRNET_OSVER=`echo $host_os | sed 's/[-|.]/_/g'`
#MRNET_OS=$host_os
#echo $MRNET_OS $MRNET_OSVER
MRNET_ROOT=`pwd`
MRNET_VERSION='`cat "$(srcdir)"/VERSION`'
changequote([, ])dnl

AC_DEFINE_UNQUOTED(COMMNODE_EXE, "$MRNET_ROOT/bin/$host/mrnet_commnode")
AC_DEFINE_UNQUOTED(OUTPUT_LEVEL, $OUTPUT_LEVEL)
AC_SUBST(MRNET_ARCH)
AC_SUBST(MRNET_OS)
AC_SUBST(MRNET_ROOT)
AC_SUBST(MRNET_VERSION)

case "$host_os" in
  *aix4.2*)
    LIBS="$LIBS -lm -lc -lpthread"
    CFLAGS="$CFLAGS -Daix -Daix4_2"
    CXXFLAGS="$CXXFLAGS -Daix -Daix4_2"
    ;;
  *aix4.3*)
    LIBS="$LIBS -lm -lc -lpthread"
    CFLAGS="$CFLAGS -Daix -Daix4_3"
    CXXFLAGS="$CXXFLAGS -Daix -Daix4_3"
    ;;
  *aix5*)
    LIBS="$LIBS -lm -lc -lpthread"
    CFLAGS="$CFLAGS -Daix -Daix5"
    CXXFLAGS="$CXXFLAGS -Daix -Daix5"
    ;;
  *solaris*)
    LIBS="$LIBS -lrpcsvc -lsocket -lnsl -lm -lpthread"
    CFLAGS="$CFLAGS -Dsolaris"
    CXXFLAGS="$CXXFLAGS -Dsolaris"
    ;;
  *sunos*)
    LIBS="$LIBS -lrpcsvc -lsocket -lnsl -lm -lpthread"
    CFLAGS="$CFLAGS -Dsunos"
    CXXFLAGS="$CXXFLAGS -Dsunos"
    ;;
  *irix*)
    LIBS="$LIBS -lm -lc -lpthread"
    CFLAGS="$CFLAGS -Dirix"
    CXXFLAGS="$CXXFLAGS -Dirix"
    ;;
  *linux*)
    LIBS="$LIBS -lm -lpthread"
    CFLAGS="$CFLAGS -Dlinux"
    CXXFLAGS="$CXXFLAGS -Dlinux"
    ;;
  *)
    LIBS="$LIBS -lm -lpthread"
    ;;
esac
LIBS="$LIBS $FLEX_LIB"
AC_SUBST(LIBS)
AC_SUBST(CLINKER)
AC_SUBST(CXX_LINKER)
AC_SUBST(LDFLAGS)

AC_MSG_CHECKING(whether the C compiler works ($CC $CFLAGS).)
AC_TRY_COMPILE(
  [#include <stdio.h>],
  [int x;],
  [AC_MSG_RESULT(yes)],
  [AC_MSG_ERROR(no)])

AC_LANG_CPLUSPLUS
AC_MSG_CHECKING(whether the C++ compiler works ($CXX $CXXFLAGS).)
AC_TRY_COMPILE(
  [#include <stdio.h>],
  [int x;],
  [AC_MSG_RESULT(yes)],
  [AC_MSG_ERROR(no)])
AC_LANG_C

AC_SUBST(CC)
AC_SUBST(CFLAGS)
AC_SUBST(CXX)
AC_SUBST(CXXFLAGS)

if test "$CXX" = "g++" ; then
    C_AS_CPLUSPLUS="-x c++"
elif test "$CXX" = "xlC" ; then
    C_AS_CPLUSPLUS="-+"
fi
AC_SUBST(C_AS_CPLUSPLUS)

ARFLAGS="cr"
AC_SUBST(ARFLAGS)

AC_LANG_C

dnl Checks for programs.
AC_PROG_MAKE_SET
AC_PROG_RANLIB
AC_PATH_PROG(AR, ar)
AC_SUBST(AR)
AC_PATH_PROG(FLEX, flex)
AC_SUBST(FLEX)
AC_PATH_PROG(BISON, bison)
AC_SUBST(BISON)
AC_PATH_PROG(SHELL, sh)
AC_SUBST(SHELL)

AC_CHECK_SIZEOF(char)
AC_CHECK_SIZEOF(short)
AC_CHECK_SIZEOF(int)
AC_CHECK_SIZEOF(long)
AC_CHECK_SIZEOF(float)
AC_CHECK_SIZEOF(double)

AS_MKDIR_P([obj])
AS_MKDIR_P([lib])
AS_MKDIR_P([bin])
AS_MKDIR_P([depends])

AC_OUTPUT(conf/Makefile.$MRNET_ARCH.inc:conf/Makefile.generic-arch.in \
          conf/Makefile.inc Makefile:conf/Makefile.in)
