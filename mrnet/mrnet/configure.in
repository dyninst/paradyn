dnl Process this file with autoconf to produce a configure script.

AC_PREREQ(2.61)
AC_INIT(src/Network.C)
AC_CONFIG_SRCDIR(src/Network.C)
AC_CONFIG_HEADER([src/config.h])
AC_CONFIG_HEADER([xplat/config.h])

AC_CONFIG_AUX_DIR(conf)

abs_srcdir=`cd $srcdir && pwd`

dnl === C++ COMPILERS ===
dnl TODO: figure out dlopen()/shared object idiosyncracies when using non-GNU compilers
AC_PROG_CXX(xlC_r CC g++)
AC_LANG(C++)

dnl Checks for programs.
AC_PROG_MAKE_SET
AC_PROG_RANLIB
AC_PATH_PROG(GREP, grep)
AC_SUBST(GREP)
AC_PATH_PROG(RM, rm)
AC_SUBST(RM)
AC_PATH_PROG(FLEX, flex)
AC_SUBST(FLEX)
AC_PATH_PROG(BISON, bison)
AC_SUBST(BISON)
AC_PATH_PROG(SHELL, sh)
AC_SUBST(SHELL)
AC_PROG_INSTALL
PD_COMPILER_TYPE

if test "$COMPILER_TYPE" = "gnu" ; then
    CXXFLAGS="$CXXFLAGS -Dcompiler_gnu"
    C_AS_CPLUSPLUS="-x c++"

    SOFLAGS=" -fPIC -shared -rdynamic"

    if test "$debug_mode" = "yes" ; then
      CXXFLAGS="$CXXFLAGS -g"
    else
      CXXFLAGS="$CXXFLAGS -O3"
    fi

    AC_PATH_PROG(AR, ar)
    AC_SUBST(AR)
    ARFLAGS="crv"
    AC_SUBST(ARFLAGS)
elif test "$COMPILER_TYPE" = "aix-native" ; then
    CXXFLAGS="$CXXFLAGS -Dcompiler_ibm"
    SOFLAGS=" -G"
    C_AS_CPLUSPLUS="-+"

    if test "$debug_mode" = "$yes" ; then
      CXXFLAGS="$CXXFLAGS -g"
    else
      CXXFLAGS="$CXXFLAGS -O2"
    fi
    AC_PATH_PROG(AR, ar)
    AC_SUBST(AR)
    ARFLAGS="crv"
    AC_SUBST(ARFLAGS)
elif test "$COMPILER_TYPE" = "forte" ; then
    CXXFLAGS="$CXXFLAGS -Dcompiler_sun"
    SOFLAGS=" -G"

    if test "$debug_mode" = "$yes" ; then
      CXXFLAGS="$CXXFLAGS -g"
    else
      CXXFLAGS="$CXXFLAGS -O2"
    fi
    AC_PATH_PROG(AR, CC)
    AC_SUBST(AR)
    ARFLAGS="-xar -o"
    AC_SUBST(ARFLAGS)
fi


dnl === CONFIGURE OPTIONS
AC_ARG_WITH(libfl,
    [AS_HELP_STRING([--with-libfl],[Absolute path to flex library])],
    [LIBS="$LIBS ${withval}"; AC_CHECK_FUNC(yywrap, [], [AC_MSG_ERROR(Invalid flex library: ${FLEX_LIBDIR})])],
    [LIBS="$LIBS -lfl"; AC_CHECK_FUNC(yywrap, [], [AC_MSG_ERROR(Can't find flex library libfl. Specify via --with-libfl)])])


AC_ARG_ENABLE(verbosebuild,
    [AS_HELP_STRING([--enable-verbosebuild],[Display commands during build (default off)])],
    [ VERBOSEMAKE="" ],
    [ VERBOSEMAKE=".SILENT:"] )
AC_SUBST(VERBOSEMAKE)

AC_ARG_ENABLE(debug,
    [AS_HELP_STRING([--enable-debug],[Enable debug mode options (default off)])],
    [ debug_mode="yes"; CXXFLAGS="$CXXFLAGS -DDEBUG" ],
    [ debug_mode="no" ])

AC_ARG_WITH(purify,
    [AS_HELP_STRING([--with-purify],[Use purify for memory debugging])],
    [ if test "${withval}" = yes; then
          AC_PATH_PROG(PURIFY, purify)
      else
          PURIFY="${withval}"
      fi
    ])
AC_SUBST(PURIFY)

dnl === SETTING MRNET PLATFORM VARIABLES ===

dnl MRNET_ARCH is host returned by config.guess with
dnl all `-` and `.` characters replaced by `_` so that a
dnl -D MRNET_ARCH can be passed to the compiler
dnl without it complaining

AC_CANONICAL_HOST
changequote(<<, >>)dnl
MRNET_ARCH=`echo $host | sed 's/[-|.]/_/g'`
MRNET_OS=`echo $host_os | sed 's/[-0-9].*//'`
MRNET_OSVER=`echo $host_os | sed 's/[-|.]/_/g'`
MRNET_ROOT=`pwd`
MRNET_VERSION='`cat "$(srcdir)"/VERSION`'
changequote([, ])dnl

AC_DEFINE_UNQUOTED(COMMNODE_EXE, "$MRNET_ROOT/bin/$host/mrnet_commnode")
AC_DEFINE_UNQUOTED(OUTPUT_LEVEL, $OUTPUT_LEVEL)
AC_SUBST(MRNET_ARCH)
AC_SUBST(MRNET_OS)
AC_SUBST(MRNET_ROOT)
AC_SUBST(MRNET_VERSION)

dnl === C++ COMPILER OPTIONS ===
CXXFLAGS="$CXXFLAGS -D__STDC_LIMIT_MACROS -D__STDC_CONSTANT_MACROS"

case "$host_os" in
  *linux*)
    LIBS="$LIBS -lm -lpthread -ldl"
    LDFLAGS="-rdynamic"
    os_release=`uname -r`
    case "$os_release" in
      2.4*)
        CXXFLAGS="$CXXFLAGS -Dos_linux=24"
        ;;
      2.6*)
        CXXFLAGS="$CXXFLAGS -Dos_linux=26"
        ;;
      *)
        CXXFLAGS="$CXXFLAGS -Dos_linux"
        ;;
    esac
    ;;
  *aix4*)
    LIBS="$LIBS -lm -ldl -lpthread"
    CXXFLAGS="$CXXFLAGS -Dos_aix=4"
    ;;
  *aix5*)
    LIBS="$LIBS -lm -ldl -lpthread"
    CXXFLAGS="$CXXFLAGS -Dos_aix=5"
    ;;
  *solaris2.8*)
    LIBS="$LIBS -lrpcsvc -lsocket -lnsl -lm -lpthread -ldl"
    CXXFLAGS="$CXXFLAGS -Dos_solaris=8"
    ;;
  *solaris2.9*)
    LIBS="$LIBS -lrpcsvc -lsocket -lnsl -lm -lpthread -ldl"
    CXXFLAGS="$CXXFLAGS -Dos_solaris=9"
    ;;
  *sunos*)
    LIBS="$LIBS -lrpcsvc -lsocket -lnsl -lm -lpthread -ldl"
    CXXFLAGS="$CXXFLAGS -Dos_sunos"
    ;;
  *)
    LIBS="$LIBS -lm -lpthread"
    ;;
esac
AC_SUBST(LIBS)

AC_MSG_CHECKING(whether we can compile/link with \"$CXX $CXXFLAGS $LIBS\".)
AC_LINK_IFELSE( [AC_LANG_PROGRAM([],[])],
                [AC_MSG_RESULT(yes)],
                [AC_MSG_ERROR(no)])


AC_SUBST(CXX)
AC_SUBST(CXXFLAGS)
AC_SUBST(LDFLAGS)
AC_SUBST(SOFLAGS)
AC_SUBST(C_AS_CPLUSPLUS)



AC_C_BIGENDIAN
AC_CHECK_SIZEOF(char)
AC_CHECK_SIZEOF(short)
AC_CHECK_SIZEOF(int)
AC_CHECK_SIZEOF(long)
AC_CHECK_SIZEOF(float)
AC_CHECK_SIZEOF(double)

AS_MKDIR_P([obj/${host}])
AS_MKDIR_P([lib/${host}])
AS_MKDIR_P([bin/${host}])
AS_MKDIR_P([depends])

# Checks for header files.
AC_HEADER_STDC
AC_CHECK_HEADERS([arpa/inet.h fcntl.h limits.h netdb.h netinet/in.h stdlib.h string.h sys/ioctl.h sys/socket.h unistd.h sys/sockio.h])

# Checks for typedefs, structures, and compiler characteristics.
AC_HEADER_STDBOOL
AC_C_CONST
AC_TYPE_PID_T

# Checks for library functions.
AC_FUNC_FORK
AC_CHECK_FUNCS([gethostbyname socket strchr strerror])

AC_OUTPUT( Makefile:conf/Makefile.in )
AC_OUTPUT( xplat/Makefile:xplat/Makefile.in )
