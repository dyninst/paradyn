<chapter id="mrnet_topology_configuration"><title>MRNET Process-tree
Topologies</title>
<para>
MRNet allows a tool to specify a node allocation and process connectivity
tailored to its computation and communication requirements and to the system
where the tool will run. Choosing an appropriate MRNet configuration can be
difficult due to the complexity of the tool's own activity and its
interaction with the system. This section describes how users define
their own process topologies, and the <command>mrnet_topgen</command> utility
provided by MRNet to facilitate the process.
</para>

<sect1><title>Topology File Format</title>
<para>
The first parameter to the <function>Network::Network()</function>
front-end constructor is the name of an MRNet topology file. This file defines the
topological layout of the front-end, internal nodes, and back-end MRNet processes. 
In the syntax of the topology file, the
<varname>hostname:id</varname> tuple represents a process with a MRNet instance
<varname>id</varname> running on <varname>hostname</varname>. It is important
to note that the <varname>id</varname> is of symbolic value only and does not
reflect a port or process number associated with the system. A line in the
topology file is always of the form:
<synopsis>
hostname1:0 => hostname1:1 hostname1:2 ;
</synopsis>
meaning a process on <varname>hostname1</varname> with MRNet id 0
has two children, with MRNet ids 1 and 2, running on the
same host. MRNet will parse the topology file without error if the file
properly defines a tree in the mathematical sense (i.e. a tree must have
a single root, no cycles, full connection, and no node can be its own
descendant).
<note>
A single topology specification line may span multiple physical lines to
improve readability. For example:
<synopsis>
   hostname1:0 => 
                  hostname1:1 
                  hostname1:2 
                  ;
</synopsis>
</note>
</para>
</sect1>

<sect1><title>Topology File Generator</title>
<para>
When the MRNet test programs are built, a topology generator program,
<filename>$MRNET_ROOT/bin/$MRNET_ARCH/mrnet_topgen</filename>, will also
be created. The usage of this program is:
<synopsis>
mrnet_topgen &lt;OPTION&gt; [INFILE] [OUTFILE]

Create a MRNet topology specification from machine list in INFILE
or standard input, and writes output to OUTFILE or standard output.

        -b topology, --balanced=topology
                Create a balanced tree using "topology" specification. The specification
                is in the format F^D, where F is the fan-out (or out-degree) and D is the
                tree depth. The number of tree leaves (or back-ends) will be F^D.

                Example: "16^3" means a tree of depth 3 with fan-out 16, with 4096 leaves.

        -o topology, --other=topology
                Create a generic tree using "topology" specification. The specification
                for this option is (the agreeably complicated) N:N,N,N:... where N specifies
                the number of children a node has, ',' distinguishes nodes on the same level,
                and ':' separates the tree into levels.

                Example 1: "2:2,2" specifies a tree where the root has 2 children
                           and each child on the 2nd level has 2 children.
                Example 2: "2:8,4" specifies a tree where the root has 2 children.
                           At the 2nd level, the 1st child has 8 children, and the
                           2nd child has 4 children
</synopsis>
The specified input machine list must contain enough hosts
to support the entire process tree. mrnet_topgen assumes one process will
be placed on each host. To place multiple processes on the same host, the
list should contain the host's name multiple times.
</para>
</sect1>

</chapter>
